{"version":3,"sources":["components/NavBarTitle.js","components/NavBarLink.js","components/NavBar.js","pages/About.js","components/ProjectDescription.js","components/Project.js","pages/Portfolio.js","pages/Resume.js","pages/App.js","serviceWorker.js","index.js"],"names":["NavBarTitle","props","state","className","this","text","Component","NavBarLink","linkCls","isActive","to","link","NavBar","aboutIsActive","at","portfolioIsActive","resumeIsActive","About","ProjectDescription","cls","isShown","languages","description","Project","toggleDescription","currentlyShowing","showDescription","setState","onClick","title","Portfolio","Resume","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1ad86c94.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport '../styles/NavBarTitle.css'\r\n\r\nclass NavBarTitle extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return <li className=\"NavBarTitle\">\r\n            {this.props.text}\r\n        </li>\r\n    }\r\n}\r\n\r\nexport default NavBarTitle;","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport '../styles/NavBarLink.css'\r\n\r\nclass NavBarLink extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        const linkCls = (this.props.isActive) ? \"ActiveNavBarLink\" : \"NavBarLink\"\r\n        return <li className={linkCls}>\r\n            <Link to={this.props.link}>{this.props.text}</Link>\r\n        </li>\r\n    }\r\n}\r\n\r\nexport default NavBarLink;","import React, { Component } from 'react';\r\nimport '../styles/NavBar.css'\r\n\r\nimport NavBarTitle from './NavBarTitle';\r\nimport NavBarLink from './NavBarLink';\r\n\r\nclass NavBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        const aboutIsActive = (this.props.at === \"/about\");\r\n        const portfolioIsActive = (this.props.at === \"/portfolio\");\r\n        const resumeIsActive = (this.props.at === \"/resume\");\r\n        \r\n\r\n        return <ul className=\"NavBar\">\r\n            <NavBarTitle text=\"Igor Barinov\" />\r\n            <NavBarLink isActive = {aboutIsActive} link=\"/about\" text=\"About\" />\r\n            <NavBarLink isActive = {portfolioIsActive} link=\"/portfolio\" text=\"Portfolio\" />\r\n            <NavBarLink isActive = {resumeIsActive} link=\"/resume\" text=\"Resume\" />\r\n        </ul>\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React, { Component } from 'react';\r\n\r\nimport '../styles/Page.css';\r\n\r\nimport NavBar from '../components/NavBar';\r\n\r\nclass About extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Page\">\r\n        <NavBar at=\"/about\"/>\r\n        <div>\r\n          <h1>\r\n            ABOUT\r\n          </h1>\r\n          <h3>\r\n            Personal\r\n          </h3>\r\n          <p>\r\n            My name is Igor Barinov. I am currently pursuing a dual-major in Computer Science and Economics at Rensselaer Polytechnic Institute.\r\n            Employment-wise, I work at Brandeis University as a research technician where I write data analysis scripts in MATLAB.\r\n            Outside of work, I work on projects written in Rust, C++, Javascript, and more, where I tend to focus on backend work.\r\n          </p>\r\n          <h3>\r\n            Contact Information\r\n          </h3>\r\n          <h5>\r\n            Email: igorb202@gmail.com\r\n          </h5>\r\n          <h5>\r\n            GitHub: github.com/igor-barinov\r\n          </h5>\r\n          <h5>\r\n            LinkedIn: linkedin.com/in/igor-barinov/\r\n          </h5>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from 'react';\r\n\r\nimport '../styles/ProjectDescription.css';\r\n\r\nclass ProjectDescription extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        const cls = (this.props.isShown) ? \"ProjectDescription\" : \"ProjectBlank\";\r\n\r\n        return (\r\n            <div className = {cls}>\r\n                <h5>{\"Written in: \" + this.props.languages}</h5>\r\n                <p>{this.props.description}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProjectDescription;","import React, { Component } from 'react';\r\n\r\nimport '../styles/Project.css';\r\n\r\nimport ProjectDescription from './ProjectDescription';\r\n\r\nclass Project extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showDescription: false\r\n        };\r\n    }\r\n\r\n    toggleDescription = () => {\r\n        const currentlyShowing = this.state.showDescription;\r\n        this.setState({\r\n            showDescription: !currentlyShowing\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Project\">\r\n                <button onClick = {this.toggleDescription}>{this.props.title}</button>\r\n                <ProjectDescription isShown={this.showDescription} languages={this.props.languages} description={this.props.description} />\r\n                <br></br>\r\n                <br></br>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Project;","import React, { Component } from 'react';\r\n\r\nimport '../styles/Page.css';\r\n\r\nimport NavBar from '../components/NavBar';\r\nimport Project from '../components/Project';\r\n\r\nclass Portfolio extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Page\">\r\n        <NavBar at=\"/portfolio\"/>\r\n        <div>\r\n          <h1>\r\n            PORTFOLIO\r\n          </h1>\r\n          <h2>\r\n            Projects\r\n          </h2>\r\n          <Project title=\"Machine Learning in C++\" />\r\n          <Project title=\"'dscript' Programming Language\"/>\r\n          <Project title=\"HTTP Client/Server in C\" />\r\n          <Project title=\"Console Ray Tracing in Rust\" />\r\n          <Project title=\"Algorithms in Rust\" />\r\n          <Project title=\"Discord Bot in Javascript\" />\r\n          <Project title=\"GroupMe Bot in Javascript\"/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Portfolio;\r\n","import React, { Component } from 'react';\r\n\r\nimport '../styles/Page.css';\r\n\r\nimport NavBar from '../components/NavBar';\r\n\r\nclass Resume extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Page\">\r\n        <NavBar at=\"/resume\"/>\r\n        <div>\r\n          <h1>\r\n            RESUME\r\n          </h1>\r\n          <p>\r\n            can cook minute rice in 59 sec\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Resume;\r\n","import React, { Component } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\n\r\nimport About from './About';\r\nimport Portfolio from './Portfolio';\r\nimport Resume from './Resume';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route path=\"/about\"><About /></Route>\r\n          <Route path=\"/portfolio\"><Portfolio /></Route>\r\n          <Route path=\"/resume\"><Resume /></Route>\r\n          <Route path=\"/\"><About /></Route>\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport './styles/index.css'\r\nimport App from './pages/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}